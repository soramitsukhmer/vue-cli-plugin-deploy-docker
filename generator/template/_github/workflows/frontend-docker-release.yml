name: Release Docker Image
on:
  release:
    types: [published]
jobs:
  build:
    name: Build, Tag and Push Image
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to AmazonECR
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.AWS_ECR_REGISTRY }}
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - # Build Development --------------------
      name: "Development: Build, Tag and Push Image"
      id: docker_build_dev
      uses: docker/build-push-action@v2
      env:
        DOCKER_CONTAINER_TAG: dev-latest
      with:
        context: .
        push: true
        # platforms: linux/amd64,linux/arm64,linux/386
        build-args: |
          NODE_ENV=development
          VUE_APP_VERSION=${{ github.event.release.tag_name }}
          VUE_APP_GIT_SHA=${{ github.sha }}
        tags: |
          ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:dev-latest
          ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:dev-${{ github.event.release.tag_name }}
    - # Build Production --------------------
      name: "Production: Build, Tag and Push Image"
      if: "!github.event.release.prerelease"
      id: docker_build_prod
      uses: docker/build-push-action@v2
      env:
        DOCKER_CONTAINER_TAG: latest
      with:
        context: .
        push: true
        # platforms: linux/amd64,linux/arm64,linux/386
        build-args: |
          NODE_ENV=production
          VUE_APP_VERSION=${{ github.event.release.tag_name }}
          VUE_APP_GIT_SHA=${{ github.sha }}
        tags: |
          ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.event.release.tag_name }}
